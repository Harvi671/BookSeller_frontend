{"version":3,"file":"static/js/733.9353ce80.chunk.js","mappings":"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","sources":["models/AuthModel.ts","pages/register/style.tsx","service/user.service.ts","pages/register/index.tsx","service/auth.service.ts","../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js"],"sourcesContent":["export class LoginModel {\r\n  email!: string;\r\n  password!: string;\r\n\r\n  constructor() {\r\n    this.email = \"\";\r\n    this.password=\"\";\r\n  }\r\n}\r\n\r\nexport class CreateUserModel {\r\n  id?: number;\r\n  firstName!: string;\r\n  lastName!: string;\r\n  email!: string;\r\n  roleId?: number;\r\n  password!: string;\r\n  confirmPassword?: string;\r\n\r\n  constructor() {\r\n    this.id = 0;\r\n    this.firstName = \"\";\r\n    this.lastName = \"\";\r\n    this.email = \"\";\r\n    this.roleId = 0;\r\n    this.password = \"\";\r\n    this.confirmPassword = \"\";\r\n  }\r\n}\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { colors } from \"../../constant/constant\";\r\n\r\nconst createAccountStyle = makeStyles((theme) => ({\r\n  createAccountWrapper: {\r\n    \"& .create-account-page-wrapper\": {\r\n      padding: \"42px 0 80px\",\r\n      \"@media (max-width: 991px)\": {\r\n        padding: \"35px 0 50px\",\r\n      },\r\n      \"@media (max-width: 767px)\": {\r\n        padding: \"35px 0 40px\",\r\n      },\r\n      \"& .create-account-row\": {\r\n        \"& .personal-information\": {\r\n          marginBottom: \"32px\",\r\n        },\r\n        \"& p\": {\r\n          color: colors.lightTextColor,\r\n          fontWeight: 300,\r\n          fontSize: \"15px\",\r\n          marginBottom: \"16px\",\r\n        },\r\n        \"& .backlink\": {\r\n          color: colors.primary,\r\n          fontWeight: \"300\",\r\n        },\r\n\r\n        \"& .btn-wrapper\": {\r\n          marginBottom: \"15px\",\r\n          marginTop: \"17px\",\r\n          \"& .btn\": {\r\n            minWidth: \"136px\",\r\n            padding: \"0 15px\",\r\n          },\r\n        },\r\n        \"& .form-row-wrapper\": {\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          margin: \"0 -15px\",\r\n          \"& .form-col\": {\r\n            padding: \" 0 15px\",\r\n            maxWidth: \"50%\",\r\n            flex: \"0 0 50%\",\r\n            \"@media(max-width:767px)\": {\r\n              maxWidth: \"100%\",\r\n              flex: \"0 0 100%\",\r\n            },\r\n            \"&.full-width\": {\r\n              maxWidth: \"100%\",\r\n              flex: \"0 0 100%\",\r\n            },\r\n          },\r\n          \"& .MuiInputBase-formControl\": {\r\n            marginBottom: \"15px\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport { createAccountStyle };\r\n","import request from \"./request\";\r\nimport Role from \"../models/RoleModel\";\r\nimport FilterModel from \"../models/FilterModel\";\r\nimport BaseList from \"../models/BaseList\";\r\nimport UserModel, { AddOrEditUserModel } from \"../models/UserModel\";\r\n\r\nclass AuthService {\r\n  ENDPOINT = \"api/User\";\r\n\r\n  public async getAllUsers(params: FilterModel): Promise<BaseList<UserModel[]>> {\r\n    const url = `${this.ENDPOINT}/list`;\r\n    return request.get<BaseList<UserModel[]>>(url, {params}).then((res) => {\r\n      return res.data;\r\n    });\r\n  }\r\n\r\n  public async getAllRoles(): Promise<BaseList<Role[]>> {\r\n    const url = `${this.ENDPOINT}/Roles`;\r\n    return request.get<BaseList<Role[]>>(url).then((res) => {\r\n      return res.data;\r\n    });\r\n  }\r\n\r\n  public async getById(id: number): Promise<UserModel> {\r\n    const url = `${this.ENDPOINT}/${id}`;\r\n    return request.get<UserModel>(url).then((res) => {\r\n      return res.data;\r\n    });\r\n  }\r\n\r\n  public async delete(id: number): Promise<UserModel> {\r\n    const url = `${this.ENDPOINT}/Delete/${id}`;\r\n    return request.delete<UserModel>(url).then((res) => {\r\n      return res.data;\r\n    });\r\n  }\r\n\r\n  public async update(data: AddOrEditUserModel): Promise<AddOrEditUserModel> {\r\n    const url = `${this.ENDPOINT}`;\r\n    return request.put<AddOrEditUserModel>(url, data ).then((res) => {\r\n      return res.data;\r\n    });\r\n  }\r\n\r\n  public async updateProfile(data: UserModel): Promise<UserModel> {\r\n    const url = `${this.ENDPOINT}`;\r\n    return request.put<UserModel>(url, data ).then((res) => {\r\n      return res.data;\r\n    });\r\n  }\r\n}\r\nexport default new AuthService();\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { createAccountStyle } from \"./style\";\r\nimport {\r\n  Breadcrumbs,\r\n  Link,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  Button,\r\n  TextField,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport ValidationErrorMessage from \"../../components/ValidationErrorMessage/index\";\r\nimport authService from \"../../service/auth.service\";\r\nimport { StatusCode } from \"./../../constant/constant\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { CreateUserModel } from \"../../models/AuthModel\";\r\nimport { Role } from \"../../utils/enum\";\r\nimport RoleModel from \"../../models/RoleModel\";\r\nimport { materialCommonStyles } from \"../../utils/materialCommonStyles\";\r\nimport BaseList from \"../../models/BaseList\";\r\nimport userService from \"../../service/user.service\";\r\n\r\nconst Register: React.FC = () => {\r\n  const classes = createAccountStyle();\r\n  const materialClasses = materialCommonStyles();\r\n  const history = useHistory();\r\n  const initialValues: CreateUserModel = new CreateUserModel();\r\n  const [roleList, setRoleList] = useState<RoleModel[]>([]);\r\n\r\n  useEffect(() => {\r\n    getRoles();\r\n  }, []);\r\n\r\n  const getRoles = (): void => {\r\n    userService.getAllRoles().then((res: BaseList<RoleModel[]>) => {\r\n      if (res.results.length) {\r\n        setRoleList(\r\n          res.results.filter((role: RoleModel) => role.id !== Role.Admin)\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .email(\"Invalid email address format\")\r\n      .required(\"Email is required\"),\r\n    password: Yup.string()\r\n      .min(5, \"Password must be 5 characters at minimum\")\r\n      .required(\"Password is required\"),\r\n    confirmPassword: Yup.string()\r\n      .oneOf(\r\n        [Yup.ref(\"password\"), null],\r\n        \"Password and Confirm Password must be match.\"\r\n      )\r\n      .required(\"Confirm Password is required.\"),\r\n    firstName: Yup.string().required(\"First name is required\"),\r\n    lastName: Yup.string().required(\"Last name is required\"),\r\n    roleId: Yup.number().required(\"Role is required\"),\r\n  });\r\n\r\n  const onSubmit = (data: CreateUserModel): void => {\r\n    authService.create(data).then((res) => {\r\n      history.push(\"/login\");\r\n      toast.success(\"Successfully registered\");\r\n    });\r\n  };\r\n  return (\r\n    <div className={classes.createAccountWrapper}>\r\n      <div className=\"create-account-page-wrapper\">\r\n        <div className=\"container\">\r\n          <Breadcrumbs\r\n            separator=\"›\"\r\n            aria-label=\"breadcrumb\"\r\n            className=\"breadcrumb-wrapper\"\r\n          >\r\n            <Link color=\"inherit\" href=\"/\" title=\"Home\">\r\n              Home\r\n            </Link>\r\n            <Typography color=\"textPrimary\">Create an Account</Typography>\r\n          </Breadcrumbs>\r\n\r\n          <Typography variant=\"h1\">Login or Create an Account</Typography>\r\n          <div className=\"create-account-row\">\r\n            <Formik\r\n              initialValues={initialValues}\r\n              validationSchema={validationSchema}\r\n              onSubmit={onSubmit}\r\n            >\r\n              {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleBlur,\r\n                handleChange,\r\n                handleSubmit,\r\n              }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"form-block\">\r\n                    <div className=\"personal-information\">\r\n                      <Typography variant=\"h2\">Personal Information</Typography>\r\n                      <p>\r\n                        Please enter the following information to create your\r\n                        account.\r\n                      </p>\r\n                      <div className=\"form-row-wrapper\">\r\n                        <div className=\"form-col\">\r\n                          <TextField\r\n                            id=\"first-name\"\r\n                            name=\"firstName\"\r\n                            label=\"First Name *\"\r\n                            variant=\"outlined\"\r\n                            inputProps={{ className: \"small\" }}\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                          />\r\n                          <ValidationErrorMessage\r\n                            message={errors.firstName}\r\n                            touched={touched.firstName}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-col\">\r\n                          <TextField\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            id=\"last-name\"\r\n                            name=\"lastName\"\r\n                            label=\"Last Name *\"\r\n                            variant=\"outlined\"\r\n                            inputProps={{ className: \"small\" }}\r\n                          />\r\n                          <ValidationErrorMessage\r\n                            message={errors.lastName}\r\n                            touched={touched.lastName}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-col\">\r\n                          <TextField\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            label=\"Email Address *\"\r\n                            variant=\"outlined\"\r\n                            inputProps={{ className: \"small\" }}\r\n                          />\r\n                          <ValidationErrorMessage\r\n                            message={errors.email}\r\n                            touched={touched.email}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-col\">\r\n                          <FormControl\r\n                            className=\"dropdown-wrapper\"\r\n                            variant=\"outlined\"\r\n                          >\r\n                            <InputLabel htmlFor=\"select\">Roles</InputLabel>\r\n                            <Select\r\n                              name=\"roleId\"\r\n                              id={\"roleId\"}\r\n                              inputProps={{ className: \"small\" }}\r\n                              onChange={handleChange}\r\n                              className={materialClasses.customSelect}\r\n                              MenuProps={{\r\n                                classes: {\r\n                                  paper: materialClasses.customSelect,\r\n                                },\r\n                              }}\r\n                              value={values.roleId}\r\n                            >\r\n                              {roleList.length > 0 &&\r\n                                roleList.map((role: RoleModel) => (\r\n                                  <MenuItem\r\n                                    value={role.id}\r\n                                    key={\"name\" + role.id}\r\n                                  >\r\n                                    {role.name}\r\n                                  </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                          </FormControl>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"login-information\">\r\n                      <Typography variant=\"h2\">Login Information</Typography>\r\n\r\n                      <div className=\"form-row-wrapper\">\r\n                        <div className=\"form-col\">\r\n                          <TextField\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            id=\"password\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            label=\"Password *\"\r\n                            variant=\"outlined\"\r\n                            inputProps={{ className: \"small\" }}\r\n                          />\r\n                          <ValidationErrorMessage\r\n                            message={errors.password}\r\n                            touched={touched.password}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-col\">\r\n                          <TextField\r\n                            type=\"password\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            id=\"confirm-password\"\r\n                            name=\"confirmPassword\"\r\n                            label=\"Confirm Password *\"\r\n                            variant=\"outlined\"\r\n                            inputProps={{ className: \"small\" }}\r\n                          />\r\n                          <ValidationErrorMessage\r\n                            message={errors.confirmPassword}\r\n                            touched={touched.confirmPassword}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"btn-wrapper\">\r\n                        <Button\r\n                          className=\"pink-btn btn\"\r\n                          variant=\"contained\"\r\n                          type=\"submit\"\r\n                          color=\"primary\"\r\n                          disableElevation\r\n                        >\r\n                          Register\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import { CreateUserModel, LoginModel } from \"../models/AuthModel\";\r\nimport UserModel from \"../models/UserModel\";\r\nimport request from \"./request\";\r\n\r\nclass AuthService {\r\n    ENDPOINT = 'api/BookStore';\r\n\r\n    public async login(data: LoginModel): Promise<UserModel> {\r\n        const url = `${this.ENDPOINT}/Login`;\r\n        return request.post(url, data).then((res) => {\r\n            return res.data as UserModel;\r\n        });\r\n    }\r\n\r\n    public async create(data: CreateUserModel): Promise<CreateUserModel> {\r\n        const url = `${this.ENDPOINT}/RegisterUser`;\r\n        return request.post<CreateUserModel>(url, data ).then((res) => {\r\n            return res.data;\r\n        });\r\n    }\r\n}\r\nexport default new AuthService();\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand(event) {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);"],"names":["LoginModel","email","password","this","CreateUserModel","id","firstName","lastName","roleId","confirmPassword","createAccountStyle","makeStyles","theme","createAccountWrapper","padding","marginBottom","color","colors","fontWeight","fontSize","marginTop","minWidth","display","flexWrap","margin","maxWidth","flex","AuthService","ENDPOINT","params","url","request","then","res","data","classes","materialClasses","materialCommonStyles","history","useHistory","initialValues","useState","roleList","setRoleList","useEffect","getRoles","userService","results","length","filter","role","Role","validationSchema","Yup","shape","required","min","oneOf","className","Breadcrumbs","separator","Link","href","title","Typography","variant","onSubmit","authService","push","toast","values","errors","touched","handleBlur","handleChange","handleSubmit","TextField","name","label","inputProps","onBlur","onChange","ValidationErrorMessage","message","FormControl","InputLabel","htmlFor","Select","customSelect","MenuProps","paper","value","map","MenuItem","type","Button","disableElevation","createSvgIcon","React","d","withStyles","root","marginLeft","spacing","marginRight","backgroundColor","palette","grey","borderRadius","cursor","boxShadow","shadows","emphasize","icon","width","height","props","other","_objectWithoutProperties","ButtonBase","_extends","component","focusRipple","MoreHorizIcon","ref","children","_props$component","Component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","_React$useState","expanded","setExpanded","allItems","child","index","li","key","concat","clsx","ol","items","reduce","acc","current","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","onClick","event","focusable","currentTarget","parentNode","querySelector","focus","renderItemsBeforeAndAfter","alignItems","listStyle","userSelect"],"sourceRoot":""}