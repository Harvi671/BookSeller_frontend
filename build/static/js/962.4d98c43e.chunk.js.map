{"version":3,"file":"static/js/962.4d98c43e.chunk.js","mappings":"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","sources":["pages/book/style.tsx","components/ConfirmationDialog.tsx","pages/book/index.tsx"],"sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { colors } from \"../../constant/constant\";\r\n\r\nconst productStyle = makeStyles((theme) => ({\r\n  productWrapper: {\r\n    padding: \"42px 0 80px\",\r\n    \"@media (max-width: 991px)\": {\r\n      padding: \"35px 0 50px\",\r\n    },\r\n    \"@media (max-width: 767px)\": {\r\n      padding: \"35px 0 40px\",\r\n    },\r\n    \"& .btn-wrapper\": {\r\n      textAlign: \"right\",\r\n      display: \"flex\",\r\n      justifyContent: \"flex-end\",\r\n      marginBottom: \"10px\",\r\n      \"& .btn\": {\r\n        height: \"40px\",\r\n        lineHeight: \"40px\",\r\n        minWidth: \"100px\",\r\n        marginLeft: \"10px\",\r\n        padding: \"0 10px\",\r\n        fontSize: \"14px\",\r\n      },\r\n      \"& .MuiFormControl-fullWidth\": {\r\n        maxWidth: \"300px\",\r\n      },\r\n    },\r\n    \"& .MuiTable-root\": {\r\n      \"@media (max-width: 991px)\": {\r\n        width: \"900px\",\r\n        overflow: \"auto\",\r\n      },\r\n      \"& .MuiTableBody-root\": {\r\n        \"& .MuiTableRow-root\": {\r\n          \"& .MuiTableCell-root\": {\r\n            \"&:last-child\": {\r\n              paddingRight: \"0\",\r\n              textAlign: \"right\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n      \"& .green-btn\": {\r\n        height: \"30px\",\r\n        lineHeight: \"30px\",\r\n        minWidth: \"80px\",\r\n        fontSize: \"14px\",\r\n        backgroundColor: \"transparent\",\r\n        textTransform: \"capitalize\",\r\n        color: colors.greenText,\r\n        border: \"1px solid #80BF32\",\r\n        \"&:hover\": {\r\n          backgroundColor: colors.greenText,\r\n          color: colors.white,\r\n        },\r\n      },\r\n      \"& .pink-btn\": {\r\n        height: \"30px\",\r\n        lineHeight: \"30px\",\r\n        minWidth: \"80px\",\r\n        fontSize: \"14px\",\r\n        backgroundColor: \"transparent\",\r\n        color: colors.primary,\r\n        border: \"1px solid #f14d54\",\r\n        marginLeft: \"10px\",\r\n        borderRadius: \"4px\",\r\n        padding: \"0 10px\",\r\n        \"&:hover\": {\r\n          backgroundColor: colors.primary,\r\n          color: colors.white,\r\n        },\r\n      },\r\n    },\r\n    \"& .MuiTablePagination-root\": {\r\n      marginTop: \"20px\",\r\n      \"& .MuiTablePagination-toolbar\": {\r\n        paddingRight: \"20px\",\r\n        \"@media (max-width: 991px)\": {\r\n          padding: \"0\",\r\n        },\r\n        \"@media (max-width: 374px)\": {\r\n          flexWrap: \"wrap\",\r\n          justifyContent: \"center\",\r\n        },\r\n        \"& .MuiSelect-selectMenu\": {\r\n          height: \"40px\",\r\n          paddingRight: \"25px !important\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        },\r\n        \"& .MuiSelect-nativeInput\": {\r\n          top: \"0\",\r\n        },\r\n        \"& .MuiIconButton-root\": {\r\n          \"@media (max-width: 574px)\": {\r\n            padding: \"8px\",\r\n          },\r\n          \"@media (max-width: 374px)\": {\r\n            marginLeft: \"0px\",\r\n            marginTop: \"10px\",\r\n          },\r\n        },\r\n        \"& .MuiTablePagination-actions\": {\r\n          \"@media (max-width: 574px)\": {\r\n            marginLeft: \"8px\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport { productStyle };\r\n","import { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button } from \"@material-ui/core\";\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  onConfirm: () => void;\r\n  title: string;\r\n  description: string;\r\n}\r\n\r\nconst ConfirmationDialog: React.FC<Props> = (props: Props) =>{\r\n  const {open, onClose, onConfirm, title, description} = props;\r\n  return (\r\n    <Dialog\r\n          open={open}\r\n          onClose={() => onClose()}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n          className=\"cancel-popup\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {description}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              type=\"button\"\r\n              onClick={() => onClose()}\r\n              className=\"btn pink-btn\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={() => {\r\n                onConfirm()\r\n              }}\r\n              autoFocus\r\n              className=\"btn green-btn\"\r\n            >\r\n              Ok\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n  )\r\n}\r\n\r\nexport default ConfirmationDialog;","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { productStyle } from \"./style\";\r\nimport { defaultFilter, resultsPerPage } from \"../../constant/constant\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Typography,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport bookService from \"../../service/book.service\";\r\nimport { toast } from \"react-toastify\";\r\nimport categoryService from \"../../service/category.service\";\r\nimport FilterModel from \"../../models/FilterModel\";\r\nimport BaseList from \"../../models/BaseList\";\r\nimport { BookModel } from \"../../models/BookModel\";\r\nimport { CategoryModel } from \"../../models/CategoryModel\";\r\nimport ConfirmationDialog from \"../../components/ConfirmationDialog\";\r\nimport Shared from \"../../utils/shared\";\r\n\r\nconst Book: React.FC = () => {\r\n  const classes = productStyle();\r\n  const [filters, setFilters] = useState<FilterModel>(defaultFilter);\r\n  const [bookresults, setBookresults] = useState<BaseList<BookModel[]>>({\r\n    results: [],\r\n    totalresults: 0,\r\n  });\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const [selectedId, setSelectedId] = useState<number>(0);\r\n\r\n  const [categories, setCategories] = useState<CategoryModel[]>([]);\r\n\r\n  useEffect(() => {\r\n    getAllCategories();\r\n  }, []);\r\n\r\n  const getAllCategories = async (): Promise<void> => {\r\n    await categoryService.getAll({ pageIndex: 0 }).then((res) => {\r\n      if (res) {\r\n        setCategories(res.results);\r\n      }\r\n    });\r\n  };\r\n\r\n  const books: BookModel[] = useMemo((): BookModel[] => {\r\n    if (bookresults?.results) {\r\n      return bookresults.results;\r\n    }\r\n    return [];\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [categories, bookresults]);\r\n\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    const timer: NodeJS.Timeout = setTimeout(() => {\r\n      if(filters.keyword===\"\") delete filters.keyword\r\n      searchAllBooks({ ...filters });\r\n    }, 500);\r\n    return () => clearTimeout(timer);\r\n  }, [filters]);\r\n\r\n  const searchAllBooks = (filters: FilterModel): void => {\r\n    bookService.getAll(filters).then((res) => {\r\n      setBookresults(res);\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    { id: \"name\", label: \"Book Name\", minWidth: 100 },\r\n    { id: \"price\", label: \"Price\", minWidth: 100 },\r\n    { id: \"category\", label: \"Category\", minWidth: 100 },\r\n  ];\r\n\r\n  const onConfirmDelete = (): void => {\r\n    bookService.delete(selectedId).then((res) => {\r\n      toast.success(Shared.messages.DELETE_SUCCESS);\r\n      setOpen(false);\r\n      setFilters({ ...filters, pageIndex: 1 });\r\n    }).catch(e=>toast.error(Shared.messages.DELETE_FAIL));\r\n  };\r\n  return (\r\n    <div className={classes.productWrapper}>\r\n      <div className=\"container\">\r\n        <Typography variant=\"h1\">Book Page</Typography>\r\n        <div className=\"btn-wrapper\">\r\n          <TextField\r\n            id=\"text\"\r\n            name=\"text\"\r\n            placeholder=\"Search...\"\r\n            variant=\"outlined\"\r\n            inputProps={{ className: \"small\" }}\r\n            onChange={(e) => {\r\n              setFilters({ ...filters, keyword: e.target.value, pageIndex: 1 });\r\n            }}\r\n          />\r\n          <Button\r\n            type=\"button\"\r\n            className=\"btn pink-btn\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disableElevation\r\n            onClick={() => history.push(\"/add-book\")}\r\n          >\r\n            Add\r\n          </Button>\r\n        </div>\r\n        <TableContainer>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {books?.map((row: BookModel, index) => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell>{row.name}</TableCell>\r\n                  <TableCell>{row.price}</TableCell>\r\n                  <TableCell>{row.category}</TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      type=\"button\"\r\n                      className=\"green-btn btn\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      disableElevation\r\n                      onClick={() => {\r\n                        history.push(`/edit-book/${row.id}`);\r\n                      }}\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n                    <Button\r\n                      type=\"button\"\r\n                      className=\"btn pink-btn\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      disableElevation\r\n                      onClick={() => {\r\n                        setOpen(true);\r\n                        setSelectedId(row.id ?? 0);\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {!bookresults?.results.length && (\r\n                <TableRow className=\"TableRow\">\r\n                  <TableCell colSpan={5} className=\"TableCell\">\r\n                    <Typography align=\"center\" className=\"noDataText\">\r\n                      No Books\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={resultsPerPage}\r\n          component=\"div\"\r\n          count={bookresults?.results.length ? bookresults.totalresults : 0}\r\n          rowsPerPage={filters.pageSize || 0}\r\n          page={filters.pageIndex - 1}\r\n          onPageChange={(e, newPage) => {\r\n            setFilters({ ...filters, pageIndex: newPage + 1 });\r\n          }}\r\n          onRowsPerPageChange={(e) => {\r\n            setFilters({\r\n              ...filters,\r\n              pageIndex: 1,\r\n              pageSize: Number(e.target.value),\r\n            });\r\n          }}\r\n        />\r\n        <ConfirmationDialog\r\n          open={open}\r\n          onClose={() => setOpen(false)}\r\n          onConfirm={() => onConfirmDelete()}\r\n          title=\"Delete book\"\r\n          description=\"Are you sure you want to delete this book?\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Book;\r\n"],"names":["productStyle","makeStyles","theme","productWrapper","padding","textAlign","display","justifyContent","marginBottom","height","lineHeight","minWidth","marginLeft","fontSize","maxWidth","width","overflow","paddingRight","backgroundColor","textTransform","color","colors","border","borderRadius","marginTop","flexWrap","alignItems","top","props","open","onClose","onConfirm","title","description","Dialog","className","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","type","onClick","autoFocus","classes","useState","defaultFilter","filters","setFilters","results","totalresults","bookresults","setBookresults","setOpen","selectedId","setSelectedId","categories","setCategories","useEffect","getAllCategories","categoryService","pageIndex","then","res","books","useMemo","history","useHistory","timer","setTimeout","keyword","searchAllBooks","clearTimeout","bookService","Typography","variant","TextField","name","placeholder","inputProps","onChange","e","target","value","disableElevation","push","TableContainer","Table","TableHead","TableRow","label","map","column","TableCell","style","TableBody","row","index","price","category","length","colSpan","align","TablePagination","rowsPerPageOptions","resultsPerPage","component","count","rowsPerPage","pageSize","page","onPageChange","newPage","onRowsPerPageChange","Number","toast","Shared","catch"],"sourceRoot":""}